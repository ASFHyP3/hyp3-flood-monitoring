AWSTemplateFormatVersion: 2010-09-09

Parameters:
  HyP3URL:
    Type: String

  EarthdataUsername:
    Type: String

  EarthdataPassword:
    Type: String
    NoEcho: true

  S3TargetBucket:
    Type: String

  S3TargetPrefix:
    Type: String

Resources:
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${Lambda}"
      RetentionInDays: 731

  Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Action: sts:AssumeRole
          Principal:
            Service: lambda.amazonaws.com
          Effect: Allow
      Policies:
        - PolicyName: policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: s3:PutObject
                Resource: !Sub "arn:aws:s3:::${S3TargetBucket}/*"
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*"

  Lambda:
    Type: AWS::Lambda::Function
    Properties:
      Environment:
        Variables:
          HYP3_URL: !Ref HyP3URL
          EARTHDATA_USERNAME: !Ref EarthdataUsername
          EARTHDATA_PASSWORD: !Ref EarthdataPassword
          S3_TARGET_BUCKET: !Ref S3TargetBucket
          S3_TARGET_PREFIX: !Ref S3TargetPrefix
      Code: src/
      Handler: transfer_products.lambda_handler
      MemorySize: 1024
      Role: !GetAtt Role.Arn
      Runtime: python3.9
      Timeout: 900
      EphemeralStorage:
        Size: 1024 # MB

  EventInvokeConfig:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName: !Ref Lambda
      Qualifier: $LATEST
      MaximumRetryAttempts: 0

  Schedule:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: "rate(6 hours)"  # TODO decide on appropriate rate
      State: DISABLED # https://github.com/ASFHyP3/hyp3-flood-monitoring/issues/38
      Targets:
        - Arn: !GetAtt Lambda.Arn
          Id: lambda

  EventPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt Lambda.Arn
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt Schedule.Arn
