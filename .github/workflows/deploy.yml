name: Deploy CloudFormation

on:
  push:
    # TODO deploy to prod when push to main
    branches:
      - develop

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  CLOUDFORMATION_ROLE_ARN: ${{ secrets.CLOUDFORMATION_ROLE_ARN }}
  PDC_HAZARDS_AUTH_TOKEN: ${{ secrets.PDC_HAZARDS_AUTH_TOKEN }}
  EARTHDATA_USERNAME: ${{ secrets.EARTHDATA_USERNAME }}
  EARTHDATA_PASSWORD: ${{ secrets.EARTHDATA_PASSWORD }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      - uses: actions/setup-python@v3
        with:
          python-version: 3.9
      - name: Install
        run: make install-lambda-deps
      - name: Package and deploy
        run: |
          aws cloudformation package \
            --template-file lambda/cloudformation.yml \
            --s3-bucket cf-templates-aubvn3i9olmk-us-west-2 \
            --output-template-file packaged.yml
          aws cloudformation deploy \
            --template-file packaged.yml \
            --stack-name hyp3-flood-monitoring-test \
            --capabilities CAPABILITY_IAM \
            --role-arn ${CLOUDFORMATION_ROLE_ARN} \
            --parameter-overrides \
              PDCHazardsAuthToken=${PDC_HAZARDS_AUTH_TOKEN}
              EarthdataUsername=${EARTHDATA_USERNAME}
              EarthdataPassword=${EARTHDATA_PASSWORD}
